#Task-1

class keyIndex:
    k=[]
    def __init__(self,a):
        neg = False
        self.max = a[0]
        self.min = a[0]
        self.givenArray = a

        for i in range(len(a)):
            if a[i] > self.max:
                self.max = a[i]
            elif a[i] < self.min:
                self.min= a[i]
                
        if self.min < 0:
            neg = True
               
        if neg:
            self.min = self.min*(-1)
        
        if not neg:
            k=[0]*(self.max+1)
        else:
            k=[0]*(self.max+self.min+1)

        
        for i in range (len(a)):
            if neg:
                k[a[i]+self.min]+=1
            else:
                k[a[i]]+=1
       
        
        self.k = k
        
    def searching(self,value):
        if value < self.min or value > self.max:
            return False
        if self.k[value+self.min]==0:
            return True
        else:
            return False

    def sorting(self):
        index = 0
        for i in range (len(self.k)):
            temp = self.k[i]
            while temp!=0:
                temp-=1
                self.givenArray[index]=i-self.min
                index+=1
        
        return self.givenArray
           
   
==Tester code==
t=[-5,4,7,7,3,2]
b=keyIndex(t)
value=800
c=b.searching(value)
print(c)
print(b.sorting())



#Task-2
def hashTable(a):
    hashtable=[0]*len(a)

   
    for i in a:
        consCount=0
        sum=0
        v=['A','E','I','O','U']
        number=['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
        
        for x in i:
            if ord(x)>=65 and ord(x)<=99:
               if x not in v and x not in number:
                  consCount+=1
            elif x in number:
                sum+=int(x)
        idx= ((consCount*24)+sum)%9
        
        
        while (hashtable[idx%len(a)])!=0:
            idx+=1
        hashtable[idx%len(a)] = i 
    
    return hashtable
            
==Tester code==
a=["T2T","PP9","SS3","E10","UV1","12P","EE2","TT4","PO9"]
print(hashTable(a))